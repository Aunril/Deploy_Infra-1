#S3
terraform{
  backend "s3"{
    # bucket="bucket-de-la-mort"
    # key="Deploy_Infra/gg.tfstate"
    # region="us-east-1"
  }
}


#VARIABLES
variable "env" {
  type = string
}

variable "app_name" {
  type = string
}

variable "app_cidr" {
  type = string
}

variable "app_region" {
  type = string
}


#PROVIDER
provider "aws" {
  region  = "${var.app_region}"
}


#VPC
resource "aws_vpc" "main" {
  cidr_block = "${var.app_cidr}.0.0/16"
  tags = {
    Name = "${var.app_name}-${var.env}-vpc"
  }
}


#IGW
resource "aws_internet_gateway" "main" {
  vpc_id = "${aws_vpc.main.id}"
  tags = {
    Name = "${var.app_name}-${var.env}-igw"
  }
}


#SUBNETS
resource "aws_subnet" "public1" {
  vpc_id     = "${aws_vpc.main.id}"
  cidr_block = "${var.app_cidr}.1.0/24"
  availability_zone = "${var.app_region}a"
  tags = {
    Name = "${var.app_name}-${var.env}-public-1-subnet"
  }
}

resource "aws_subnet" "public2" {
  vpc_id     = "${aws_vpc.main.id}"
  cidr_block = "${var.app_cidr}.2.0/24"
  availability_zone = "${var.app_region}b"
  tags = {
    Name = "${var.app_name}-${var.env}-public-2-subnet"
  }
}

resource "aws_subnet" "public3" {
  vpc_id     = "${aws_vpc.main.id}"
  cidr_block = "${var.app_cidr}.3.0/24"
  availability_zone = "${var.app_region}c"
  tags = {
    Name = "${var.app_name}-${var.env}-public-3-subnet"
  }
}

resource "aws_subnet" "private1" {
  vpc_id     = "${aws_vpc.main.id}"
  cidr_block = "${var.app_cidr}.4.0/24"
  availability_zone = "${var.app_region}a"
  tags = {
    Name = "${var.app_name}-${var.env}-private-1-subnet"
  }
}

resource "aws_subnet" "private2" {
  vpc_id     = "${aws_vpc.main.id}"
  cidr_block = "${var.app_cidr}.5.0/24"
  availability_zone = "${var.app_region}b"
  tags = {
    Name = "${var.app_name}-${var.env}-private-2-subnet"
  }
}

resource "aws_subnet" "private3" {
  vpc_id     = "${aws_vpc.main.id}"
  cidr_block = "${var.app_cidr}.6.0/24"
  availability_zone = "${var.app_region}c"
  tags = {
    Name = "${var.app_name}-${var.env}-private-3-subnet"
  }
}


data "aws_ami" "ubuntu" {
  most_recent = true
  filter {
    name   = "name"
    values = ["ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-*"]
  }
  owners = ["099720109477"]
}


#NAT
resource "aws_instance" "nat" {
  ami = "${data.aws_ami.ubuntu.id}"
  instance_type = "t2.micro"
  subnet_id = "${aws_subnet.public1.id}"
  associate_public_ip_address = "true"
  user_data = "${file("nat.sh")}"
  source_dest_check = "false"
  vpc_security_group_ids = [aws_security_group.nat.id]
  tags = {
    Name = "${var.app_name}-${var.env}-nat"
  }
}


#NAT_SG
resource "aws_security_group" "nat" {
  name = "${var.app_name}-${var.env}-nat-sg"
  description = "redirect traffic"
  vpc_id = "${aws_vpc.main.id}"
}

resource "aws_security_group_rule" "nat-ingress" {
  type = "ingress"
  from_port = 0
  to_port = 0
  protocol = "-1"
  cidr_blocks = ["${var.app_cidr}.4.0/24","${var.app_cidr}.5.0/24","${var.app_cidr}.6.0/24"]
  security_group_id = aws_security_group.nat.id
}

resource "aws_security_group_rule" "nat-egress" {
  type = "egress"
  from_port = 0
  to_port = 0
  protocol = "-1"
  cidr_blocks = ["0.0.0.0/0"]
  security_group_id = aws_security_group.nat.id
}


#MAIN_RTB
resource "aws_default_route_table" "main" {
  default_route_table_id = "${aws_vpc.main.default_route_table_id}"
  route {
    cidr_block = "0.0.0.0/0"
    instance_id = "${aws_instance.nat.id}"
  }
  tags = {
    Name = "${var.app_name}-${var.env}-main-rtb"
  }
}


#CUSTOM_RTB
resource "aws_route_table" "custom" {
  vpc_id = "${aws_vpc.main.id}"
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = "${aws_internet_gateway.main.id}"
  }
  tags = {
    Name = "${var.app_name}-${var.env}-custom-rtb"
  }
}


#RTB_ASSOCIATION
resource "aws_route_table_association" "pub1" {
  subnet_id = "${aws_subnet.public1.id}"
  route_table_id = "${aws_route_table.custom.id}"
}

resource "aws_route_table_association" "pub2" {
  subnet_id = "${aws_subnet.public2.id}"
  route_table_id = "${aws_route_table.custom.id}"
}

resource "aws_route_table_association" "pub3" {
  subnet_id = "${aws_subnet.public3.id}"
  route_table_id = "${aws_route_table.custom.id}"
}

resource "aws_route_table_association" "priv1" {
  subnet_id = "${aws_subnet.private1.id}"
  route_table_id = "${aws_default_route_table.main.id}"
}

resource "aws_route_table_association" "priv2" {
  subnet_id = "${aws_subnet.private2.id}"
  route_table_id = "${aws_default_route_table.main.id}"
}

resource "aws_route_table_association" "priv3" {
  subnet_id = "${aws_subnet.private3.id}"
  route_table_id = "${aws_default_route_table.main.id}"
}
